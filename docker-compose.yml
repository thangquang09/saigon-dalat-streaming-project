services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    healthcheck:
      test: ["CMD", "bash", "-c", "echo 'rouk' | nc localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - thangquang
    
  broker:
    image: confluentinc/cp-server:7.4.0
    hostname: broker
    container_name: broker
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'false'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    healthcheck:
      test: ["CMD", "bash", "-c", "nc -z localhost 9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - thangquang

  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    volumes:
      - ./jobs:/opt/bitnami/spark/jobs
      - ./stream_data:/opt/bitnami/spark/stream_data
    command: /bin/bash -c "bin/spark-class org.apache.spark.deploy.master.Master"
    environment:
      - PYTHONPATH=/opt/bitnami/spark/jobs
      - SPARK_MODE=master
    ports:
      - "9090:8080" 
      - "7077:7077"
    networks:
      - thangquang

  spark-worker-1:
    image: bitnami/spark:latest
    volumes:
      - ./jobs:/opt/bitnami/spark/jobs
      - ./stream_data:/opt/bitnami/spark/stream_data
    command: /bin/bash -c "bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077"
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=Worker
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=1g
      - SPARK_MASTER_URL=spark://spark-master:7077
      - PYTHONPATH=/opt/bitnami/spark/jobs
    networks:
      - thangquang

  spark-worker-2:
    image: bitnami/spark:latest
    volumes:
      - ./jobs:/opt/bitnami/spark/jobs
      - ./stream_data:/opt/bitnami/spark/stream_data
    command: /bin/bash -c "bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077"
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=Worker
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=1g
      - SPARK_MASTER_URL=spark://spark-master:7077
      - PYTHONPATH=/opt/bitnami/spark/jobs
    networks:
      - thangquang

    # HDFS NameNode
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    hostname: namenode
    ports:
      - "9870:9870"  # Web UI để quản lý NameNode
      - "9000:9000"  # Port NameNode để các dịch vụ khác giao tiếp
    environment:
      - CLUSTER_NAME=hadoop-cluster
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      - HDFS_NAMENODE_NAME_DIR=file:///hadoop/dfs/name
      - CLUSTER_NAME=hadoop-cluster
    volumes:
      - namenode:/hadoop/dfs/name
    networks:
      - thangquang

  # HDFS DataNode
  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    hostname: datanode
    ports:
      - "9864:9864"  # Web UI để quản lý DataNode
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      - HDFS_DATANODE_DATA_DIR=file:///hadoop/dfs/data
      - CLUSTER_NAME=hadoop-cluster
    volumes:
      - datanode:/hadoop/dfs/data
    depends_on:
      - namenode
    networks:
      - thangquang


volumes:
  namenode:
  datanode:

networks:
  thangquang: